---
---

<div
    x-data="{}"
    x-intersect:enter="
        const pendingContext = Array.from(document.querySelectorAll('.pending-local-context'))
            .findLast((pendingContext) => pendingContext.getBoundingClientRect().top <= 0)

        const context = pendingContext?.querySelector('.local-context')

        if (! context) {
            return
        }

        const contextStack = document.getElementById('local-context-stack')

        if (! contextStack) {
            return
        }

        const container = document.createElement('div')
        container.classList.add('context-container')
        window.autoAnimate(container)
        contextStack.appendChild(container)
        container.appendChild(context)
    "
    x-intersect:leave="
        if ($el.getBoundingClientRect().top <= 0) {
            const contextStack = document.getElementById('local-context-stack')

            if (! contextStack) {
                return
            }

            const context = contextStack?.children[contextStack.children.length - 1] ?? null

            if (! context) {
                return
            }

            const pendingContext = Array.from(document.querySelectorAll('.pending-local-context'))
                .findLast((pendingContext) => pendingContext.getBoundingClientRect().top <= 0)

            if (! pendingContext) {
                return
            }

            pendingContext.appendChild(context)
            document.getElementById('context-stack').querySelectorAll('.context-container').forEach((container) => {
                if (container.children.length) {
                    return
                }

                container.remove()
            })
        }
    "
    class="context-clear"
></div>

